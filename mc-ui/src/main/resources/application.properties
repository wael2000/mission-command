# Tenant configuration using Google OpenID Provider
#quarkus.oidc.auth-server-url=https://accounts.google.com
#quarkus.oidc.application-type=web-app
#quarkus.oidc.client-id=223144963585-h9gi1ksqpchti1qqdtu2o7uvrmoegu0o.apps.googleusercontent.com
#quarkus.oidc.credentials.secret=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
#quarkus.oidc.token.issuer=https://accounts.google.com
#quarkus.oidc.authentication.scopes=email,profile,openid
#quarkus.oidc.logout.post-logout-path=index.html

#quarkus.http.auth.permission.authenticated.paths=/*
#quarkus.http.auth.permission.authenticated.policy=authenticated
#quarkus.log.category."com.gargoylesoftware.htmlunit.DefaultCssErrorHandler".level=ERROR

# env variables
# battalionService.url: backend URL
# ocp.api.url: OCP API server URL (pipeline is calling back the app)

quarkus.kubernetes-client.trust-certs=true
quarkus.container-image.builder=jib
quarkus.container-image.registry=quay.io
quarkus.container-image.group=wael2000
quarkus.container-image.tag=latest
quarkus.container-image.username=wael2000+demo
quarkus.container-image.password=0GMWZKSXJBTBQ8X6HSFIOIN0MGIMMCJV0HD2YH56B7BCXB4CPQOZO781RQYMYUYJ



%dev.quarkus.http.port=8080
quarkus.http.port=8080

%dev.battalionService.url=localhost:8090
battalionService.url=${battalionService.url}


quarkus.http.cors=true
quarkus.http.cors.origins=${ocp.api.url}
%dev.quarkus.http.cors.origins=https://api.cluster-f44mq.dynamic.redhatworkshops.io:6443