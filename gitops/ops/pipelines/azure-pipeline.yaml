apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: azure-postgresql
spec:
  params:
    - default: fox-team
      description: battalion name
      name: battalion
      type: string
    - default: deploy
      description: action
      name: action
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: 'https://github.com/wael2000/mission-command'
        - name: revision
          value: main
        - name: refspec
          value: ''
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: ''
        - name: sparseCheckoutDirectories
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: httpProxy
          value: ''
        - name: httpsProxy
          value: ''
        - name: noProxy
          value: ''
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: 'registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:9b14f52b21d29d8d83ea4c0e78623debc954f1a732d2be6d1a7269fbba23b1a4'
        - name: userHome
          value: /home/git
      taskRef:
        kind: ClusterTask
        name: git-clone
      when:
        - input: $(params.action)
          operator: in
          values:
            - deploy
      workspaces:
        - name: output
          workspace: source
    - name: deploy-azure-service
      params:
        - name: SCRIPT
          value: sed 's/BATTALION/$(params.battalion)/g' gitops/azure-application.yaml | oc create -f - -n openshift-gitops
        - name: VERSION
          value: latest
      runAfter:
        - create-secret
      taskRef:
        kind: ClusterTask
        name: openshift-client
      when:
        - input: $(params.action)
          operator: in
          values:
            - deploy
      workspaces:
        - name: manifest-dir
          workspace: source
    - name: remove-azure-service
      params:
        - name: SCRIPT
          value: oc delete application $(params.battalion)-azure-db -n openshift-gitops
        - name: VERSION
          value: latest
      runAfter:
        - git-clone
      taskRef:
        kind: ClusterTask
        name: openshift-client
      when:
        - input: $(params.action)
          operator: in
          values:
            - remove
      workspaces:
        - name: manifest-dir
          workspace: source
    - name: create-secret
      params:
        - name: SCRIPT
          value: |-
            oc create secret generic postgresqlserver-postgresqlserver-battalion --from-literal=fullyQualifiedUsername=postgres@postgresqlserver-battalion --from-literal=password=C0mplexP@ssw0rd \
            --from-literal=postgreSqlServerName=postgresqlserver-battalion --from-literal=username=postgres -n battalion-$(params.battalion)-azure
        - name: VERSION
          value: latest
      runAfter:
        - add-to-manage-scope
      taskRef:
        kind: ClusterTask
        name: openshift-client
      when:
        - input: $(params.action)
          operator: in
          values:
            - deploy
    - name: create-project
      params:
        - name: SCRIPT
          value: oc new-project battalion-$(params.battalion)-azure
        - name: VERSION
          value: latest
      runAfter:
        - git-clone
      taskRef:
        kind: ClusterTask
        name: openshift-client
      when:
        - input: $(params.action)
          operator: in
          values:
            - deploy
    - name: add-to-manage-scope
      params:
        - name: SCRIPT
          value: oc label ns battalion-$(params.battalion)-azure argocd.argoproj.io/managed-by=openshift-gitops
        - name: VERSION
          value: latest
      runAfter:
        - create-project
      taskRef:
        kind: ClusterTask
        name: openshift-client
      when:
        - input: $(params.action)
          operator: in
          values:
            - deploy
      workspaces:
        - name: manifest-dir
          workspace: source
  workspaces:
    - name: source
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: azure-trigger-binding
spec:
  params:
    - name: battalion
      value: $(body.battalion)
    - name: action
      value: $(body.action)
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: azure-trigger-template
spec:
  params:
    - description: battalion name
      name: battalion
    - description: action
      name: action
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: azure-pipeline-$(tt.params.battalion)-
      spec:
        params:
          - name: battalion
            value: $(tt.params.battalion)
          - name: action
            value: $(tt.params.action)
        pipelineRef:
          name: azure-postgresql
        serviceAccountName: pipeline
        workspaces:
          - name: source
            volumeClaimTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 128Mi
                storageClassName: ocs-external-storagecluster-ceph-rbd
                volumeMode: Filesystem
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: azure-event-listener
spec:
  namespaceSelector: {}
  resources: {}
  serviceAccountName: pipeline
  triggers:
    - bindings:
        - kind: TriggerBinding
          ref: azure-trigger-binding
      name: battalion-trigger
      template:
        ref: azure-trigger-template