# Configuration file
# key = value
# application level
pipeline.enabled=false
# Quarkus level
quarkus.devservices.enabled=true

%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=postgres
%prod.quarkus.datasource.password=P@ssw0rd
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://postgresql:5432/battalion


quarkus.datasource.jdbc.min-size=1
quarkus.datasource.jdbc.max-size=2

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=import.sql


%dev.quarkus.http.port=8090
quarkus.http.port=8080


quarkus.http.cors=true
#quarkus.http.cors.origins=http://ui-quarkus.myclusterabduhan1-88e9887841c920692019c4a22b0513af-0000.us-south.containers.appdomain.cloud
quarkus.http.cors.origins=http://localhost:8080,http://el-battalion-event-listener-command-post.apps.cluster-zzmdz.dynamic.opentlc.com
%dev.quarkus.http.cors.origins=http://localhost:8080,http://el-battalion-event-listener-command-post.apps.cluster-zzmdz.dynamic.opentlc.com

%dev.org.redhat.services.PipelineProxyService/mp-rest/url=http://el-battalion-event-listener-command-post.apps.cluster-qjtjg.dynamic.opentlc.com
org.redhat.services.PipelineProxyService/mp-rest/url=http://el-battalion-event-listener-command-post.apps.cluster-qjtjg.dynamic.opentlc.com


%dev.org.redhat.services.BuildPipelineProxyService/mp-rest/url=http://el-bubble-event-listener-demo-cicd.apps.cluster-qjtjg.dynamic.opentlc.com
org.redhat.services.BuildPipelineProxyService/mp-rest/url=http://el-bubble-event-listener-demo-cicd.apps.cluster-qjtjg.dynamic.opentlc.com